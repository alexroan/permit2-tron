name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache Foundry artifacts
        uses: actions/cache@v4
        with:
          path: |
            cache
            out
            ~/.foundry
          key: ${{ runner.os }}-foundry-${{ hashFiles('foundry.toml', 'lib/**') }}
          restore-keys: |
            ${{ runner.os }}-foundry-

      - name: Install contract dependencies
        run: make install-tronbox && make install-foundry

      - name: Show Forge version
        run: |
          forge --version

      - name: Check Forge formatting
        run: |
          forge fmt --check
        id: fmt

      - name: Verify submodules
        run: |
          echo "Checking submodule status..."
          git submodule status
          echo "Checking lib/solmate contents..."
          ls -la lib/solmate/
          ls -la lib/solmate/src/tokens/ || echo "tokens directory not found"

      - name: Test contracts
        run: make test-foundry
        id: test

      # - name: Integration tests
      #   run: forge test
      #   env:
      #     FOUNDRY_PROFILE: integration
      #     FORK_URL: ${{ secrets.FORK_URL }}
